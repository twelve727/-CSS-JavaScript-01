.flex-container {
    height: 400px;
    background-color: #ddd;
    display: flex;
}

                            /********************/

                            /* order */
                            
                            /********************/

/*  flex-container 내부 item 순서를 지정하는 속성 
    (기본값 0, 정수, 양수/음수 가능)
*/


/* order 1-2-3-4-5 색상 바뀌는것 확인 4-1-5-3-2 
    <div class="flex-container">
        <div class="item item4">item1</div>
        <div class="item item1">item2</div>
        <div class="item item5">item3</div>
        <div class="item item3">item4</div>
        <div class="item item2">item5</div>
    </div>
*/

.order1{ order : 1; }
.order2{ order : 2; }
.order3{ order : 3; }
.order4{ order : 4; }
.order5{ order : 5; }


                            /********************/

                            /* flex-grow */

                            /********************/

/* 지정된 비율에 맞게 점점 팽창
(기본값 0 -> 팽창 X) */

.grow1 { flex-grow: 1;}
.grow2 { flex-grow: 6;}
.grow3 { flex-grow: 2;}
.grow4 { flex-grow: 1;}

                            /********************/

                            /* flex-shrink */
                            /* 눈으로 확인하기도 어렵고, 쓰기도 어려움,
                            실무에서는 사용을 잘 안하는 구문 */

                            /********************/

/* item이 수축하는 정도를 지정하는 속성 */
/* (기본값 1) */

.shrink { flex-shrink: 0; }
.shrink { flex-shrink: 1; }
.shrink { flex-shrink: 2; }
.shrink { flex-shrink: 3; }
.shrink { flex-shrink: 4; }
.shrink { flex-shrink: 5; }

/* flex-basis */

.basis-150px { flex-basis: 150px; }
.basis-10 { flex-basis: 10%; }
.basis-25 { flex-basis : 25%; }


.flex1 {
        /* flex-grow , flex-shrink, flex-basis */
    flex: 0 0 100px;
}

                            /*************/

                            /* aline - self */

                            /*************/

/*
각각의 item별로 cross axis 방향으로 정렬을 지정하는 속성
*/

.self-start {
    align-self : flex-start;
}
.self-end {
    align-self: flex-end;
}
.self-center {
    align-self: center;
}